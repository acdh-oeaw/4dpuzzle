# generated by appcreator
from django import forms
from crispy_forms.helper import FormHelper
from crispy_forms.layout import Submit,  Layout, Fieldset, Div, MultiField, HTML
from crispy_forms.bootstrap import Accordion, AccordionGroup
from . models import (
    Actor,
    ArchaeologicalObject4DPuzzleID,
    ArchaeologicalObjectID,
    ArchiveINF,
    AutoCAD,
    BoneInventoryNumber,
    ConvoluteInventoryNumber,
    Convolutecards,
    Datenbase,
    Document4DPuzzleID,
    DocumentTypes,
    ExcavationObjectID,
    ExcavationSeasons,
    Fielddrawing,
    Film,
    Filme,
    FindInventoryNumber,
    Finddrawing,
    Findsheets,
    Fotoborndigital,
    Fotosgescannt,
    Fundinventar4DPuzzleID,
    FundinventarInventarnummern,
    FundinventarKonvolutnummern,
    FundinventarMaterialproben,
    FundinventarSteininventar,
    GIS,
    Geophysics,
    Inventorybooks,
    PhasenID,
    Protocols,
    StratenID,
    TDInv4DPuzzleNUMMER,
    Tables,
    ThreeDimensionalModel,
    Videos,
    WallpaintingInventory
)


class ActorFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ActorFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'access',
                    css_id="more"
                    ),
                )
            )


class ActorForm(forms.ModelForm):
    class Meta:
        model = Actor
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ActorForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ArchaeologicalObject4DPuzzleIDFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ArchaeologicalObject4DPuzzleIDFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'archaeological_object_id','archaeological_object_type','archaeological_object_comment','excavation_object_id','position','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class ArchaeologicalObject4DPuzzleIDForm(forms.ModelForm):
    class Meta:
        model = ArchaeologicalObject4DPuzzleID
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ArchaeologicalObject4DPuzzleIDForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ArchaeologicalObjectIDFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ArchaeologicalObjectIDFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'archaeological_object_type','archaeological_object_comment','excavation_object_id','corresponding_to_archaeological_object_id','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class ArchaeologicalObjectIDForm(forms.ModelForm):
    class Meta:
        model = ArchaeologicalObjectID
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ArchaeologicalObjectIDForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ArchiveINFFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ArchiveINFFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','relatedto','creation_date_archivalobject','file_extension_archivalobject','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','creator_archivalobject','comment',
                    css_id="more"
                    ),
                )
            )


class ArchiveINFForm(forms.ModelForm):
    class Meta:
        model = ArchiveINF
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ArchiveINFForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class AutoCADFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(AutoCADFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_archivalobject','file_extension_original','file_extension_archivalobject','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','creator_archivalobject','excavation_object_id','archaeological_object_id','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class AutoCADForm(forms.ModelForm):
    class Meta:
        model = AutoCAD
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(AutoCADForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class BoneInventoryNumberFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(BoneInventoryNumberFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',

                    css_id="more"
                    ),
                )
            )


class BoneInventoryNumberForm(forms.ModelForm):
    class Meta:
        model = BoneInventoryNumber
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(BoneInventoryNumberForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ConvoluteInventoryNumberFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ConvoluteInventoryNumberFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',

                    css_id="more"
                    ),
                )
            )


class ConvoluteInventoryNumberForm(forms.ModelForm):
    class Meta:
        model = ConvoluteInventoryNumber
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ConvoluteInventoryNumberForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ConvolutecardsFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ConvolutecardsFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','creation_date_original','creation_year_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','equipment_scan','source_original_copy_edited_copy','resolution_scan_dpi','creator_scan','original_material','season','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class ConvolutecardsForm(forms.ModelForm):
    class Meta:
        model = Convolutecards
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ConvolutecardsForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class DatenbaseFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(DatenbaseFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_archivalobject','file_extension_original','file_extension_archivalobject','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','creator_archivalobject','excavation_object_id','archaeological_object_id','find_material','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class DatenbaseForm(forms.ModelForm):
    class Meta:
        model = Datenbase
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(DatenbaseForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class Document4DPuzzleIDFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(Document4DPuzzleIDFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class Document4DPuzzleIDForm(forms.ModelForm):
    class Meta:
        model = Document4DPuzzleID
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(Document4DPuzzleIDForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class DocumentTypesFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(DocumentTypesFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'analogue_borndigital','description',
                    css_id="more"
                    ),
                )
            )


class DocumentTypesForm(forms.ModelForm):
    class Meta:
        model = DocumentTypes
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(DocumentTypesForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ExcavationObjectIDFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ExcavationObjectIDFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'excavation_object_type','site_id','area','square_trench','planum','year','season','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class ExcavationObjectIDForm(forms.ModelForm):
    class Meta:
        model = ExcavationObjectID
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ExcavationObjectIDForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ExcavationSeasonsFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ExcavationSeasonsFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'season','access',
                    css_id="more"
                    ),
                )
            )


class ExcavationSeasonsForm(forms.ModelForm):
    class Meta:
        model = ExcavationSeasons
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ExcavationSeasonsForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FielddrawingFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FielddrawingFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_original','creation_year_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','equipment_scan','source_original_copy_edited_copy','resolution_scan_ppi','creator_scan','original_material','amendment_drawn_by','drawer_monogram','excavation_object_id','archaeological_object_id','stratum_comment','season','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FielddrawingForm(forms.ModelForm):
    class Meta:
        model = Fielddrawing
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FielddrawingForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FilmFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FilmFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'creation_year_original','film_number','document_type','dt_abbr','document_subtype','dst_abbr','creation_date_metadata','creator_metadata','film_format','film_brand','equipment_camera_brand','decomposition_phenomenon','original_material','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FilmForm(forms.ModelForm):
    class Meta:
        model = Film
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FilmForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FilmeFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FilmeFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',

                    css_id="more"
                    ),
                )
            )


class FilmeForm(forms.ModelForm):
    class Meta:
        model = Filme
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FilmeForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FindInventoryNumberFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FindInventoryNumberFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',

                    css_id="more"
                    ),
                )
            )


class FindInventoryNumberForm(forms.ModelForm):
    class Meta:
        model = FindInventoryNumber
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FindInventoryNumberForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FinddrawingFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FinddrawingFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','source_original_copy_edited_copy','resolution_scan_dpi','creator_scan','original_material','find_inventory_number','convolute_inventory_number','bone_stone_inventory_number','find_date','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FinddrawingForm(forms.ModelForm):
    class Meta:
        model = Finddrawing
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FinddrawingForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FindsheetsFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FindsheetsFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','creation_date_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','storage_original','site_id','equipment_scan','source_original_copy_edited_copy','resolution_scan_dpi','creator_scan','original_material','find_inventory_number','convolute_inventory_number','bone_stone_inventory_number','excavation_object_id','archaeological_object_id','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FindsheetsForm(forms.ModelForm):
    class Meta:
        model = Findsheets
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FindsheetsForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FotoborndigitalFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FotoborndigitalFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_metadata','creator_metadata','copyright','access','site_id','excavation_object_id','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FotoborndigitalForm(forms.ModelForm):
    class Meta:
        model = Fotoborndigital
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FotoborndigitalForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FotosgescanntFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FotosgescanntFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'film_number','photo_number','document_type','dt_abbr','document_subtype','dst_abbreviation','creation_date_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','equipment_scan','source_original_copy_edited_copy','resolution_scan_ppi','creator_scan','film_id','excavation_object_id','archaeological_object_id','archaeological_object_type','find_type','find_material','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FotosgescanntForm(forms.ModelForm):
    class Meta:
        model = Fotosgescannt
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FotosgescanntForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class Fundinventar4DPuzzleIDFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(Fundinventar4DPuzzleIDFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'find_material','find_type','find_comment','excavation_object_id','access','uncertainty_excavation_digitisation','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class Fundinventar4DPuzzleIDForm(forms.ModelForm):
    class Meta:
        model = Fundinventar4DPuzzleID
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(Fundinventar4DPuzzleIDForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FundinventarInventarnummernFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FundinventarInventarnummernFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'find_material','find_type','find_comment','excavation_object_id','archaeological_object_id','access','uncertainty_excavation_digitisation','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FundinventarInventarnummernForm(forms.ModelForm):
    class Meta:
        model = FundinventarInventarnummern
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FundinventarInventarnummernForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FundinventarKonvolutnummernFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FundinventarKonvolutnummernFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'excavation_object_id','archaeological_object_id','access','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FundinventarKonvolutnummernForm(forms.ModelForm):
    class Meta:
        model = FundinventarKonvolutnummern
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FundinventarKonvolutnummernForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FundinventarMaterialprobenFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FundinventarMaterialprobenFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'find_material','find_type','excavation_object_id','archaeological_object_id','access','relatedto','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FundinventarMaterialprobenForm(forms.ModelForm):
    class Meta:
        model = FundinventarMaterialproben
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FundinventarMaterialprobenForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class FundinventarSteininventarFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(FundinventarSteininventarFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'find_material','find_type','find_comment','excavation_object_id','archaeological_object_id','access','creator_metadata','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class FundinventarSteininventarForm(forms.ModelForm):
    class Meta:
        model = FundinventarSteininventar
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(FundinventarSteininventarForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class GISFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(GISFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_original','creation_date_archivalobject','file_extension_original','file_extension_archivalobject','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','creator_archivalobject','excavation_object_id','archaeological_object_id','relatedto','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class GISForm(forms.ModelForm):
    class Meta:
        model = GIS
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(GISForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class GeophysicsFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(GeophysicsFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_original','creation_date_archivalobject','file_extension_original','file_extension_archivalobject','method','equipment','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','creator_archivalobject','excavation_object_id','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class GeophysicsForm(forms.ModelForm):
    class Meta:
        model = Geophysics
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(GeophysicsForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class InventorybooksFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(InventorybooksFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','creation_date_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','equipment_scan','source_original_copy_edited_copy','resolution_scan_dpi','creator_scan','original_material','find_inventory_number','convolute_inventory_number','bone_stone_inventory_number','excavation_post_excavation','original_comment',
                    css_id="more"
                    ),
                )
            )


class InventorybooksForm(forms.ModelForm):
    class Meta:
        model = Inventorybooks
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(InventorybooksForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class PhasenIDFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(PhasenIDFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'phase_type','site_id','area',
                    css_id="more"
                    ),
                )
            )


class PhasenIDForm(forms.ModelForm):
    class Meta:
        model = PhasenID
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(PhasenIDForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ProtocolsFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ProtocolsFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','creation_date_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','storage','site_id','equipment_scan','source_original_copy_edited_copy','resolution_scan_dpi','creator_scan','original_material','excavation_object_id','archaeological_object_id','number_of_pages','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class ProtocolsForm(forms.ModelForm):
    class Meta:
        model = Protocols
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ProtocolsForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class StratenIDFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(StratenIDFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'stratum_type','site_id','area',
                    css_id="more"
                    ),
                )
            )


class StratenIDForm(forms.ModelForm):
    class Meta:
        model = StratenID
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(StratenIDForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class TDInv4DPuzzleNUMMERFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(TDInv4DPuzzleNUMMERFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',

                    css_id="more"
                    ),
                )
            )


class TDInv4DPuzzleNUMMERForm(forms.ModelForm):
    class Meta:
        model = TDInv4DPuzzleNUMMER
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(TDInv4DPuzzleNUMMERForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class TablesFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(TablesFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_archivalobject','file_extension_original','file_extension_archivalobject','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','creator_archivalobject','excavation_object_id','archaeological_object_id','relatedto','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class TablesForm(forms.ModelForm):
    class Meta:
        model = Tables
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(TablesForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class ThreeDimensionalModelFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(ThreeDimensionalModelFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_archivalobject','file_extension_original','file_extension_archivalobject','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','creator_archivalobject','excavation_object_id','archaeological_object_id','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class ThreeDimensionalModelForm(forms.ModelForm):
    class Meta:
        model = ThreeDimensionalModel
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(ThreeDimensionalModelForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class VideosFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(VideosFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','document_subtype','dst_abbr','creation_date_original','creation_date_archivalobject','file_extension_original','file_extension_archivalobject','creation_date_metadata','creator_metadata','creator_original','creator_archivalobject','copyright','access','site_id','find_inventory_number','excavation_object_id','archaeological_object_id','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class VideosForm(forms.ModelForm):
    class Meta:
        model = Videos
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(VideosForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)


class WallpaintingInventoryFilterFormHelper(FormHelper):
    def __init__(self, *args, **kwargs):
        super(WallpaintingInventoryFilterFormHelper, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.form_class = 'genericFilterForm'
        self.form_method = 'GET'
        self.helper.form_tag = False
        self.add_input(Submit('Filter', 'Search'))
        self.layout = Layout(
            Fieldset(
                'Basic search options',
                'id',
                css_id="basic_search_fields"
                ),
            Accordion(
                AccordionGroup(
                    'Advanced search',
                    'document_type','dt_abbr','creation_date_original','creation_date_scan','file_extension','creation_date_metadata','creator_metadata','creator_original','copyright','access','site_id','equipment_scan','source_original_copy_edited_copy','resolution_scan_dpi','creator_scan','original_material','excavation_post_excavation','original_comment','digitisation_comment',
                    css_id="more"
                    ),
                )
            )


class WallpaintingInventoryForm(forms.ModelForm):
    class Meta:
        model = WallpaintingInventory
        fields = "__all__"

    def __init__(self, *args, **kwargs):
        super(WallpaintingInventoryForm, self).__init__(*args, **kwargs)
        self.helper = FormHelper()
        self.helper.form_tag = True
        self.helper.form_class = 'form-horizontal'
        self.helper.label_class = 'col-md-3'
        self.helper.field_class = 'col-md-9'
        self.helper.add_input(Submit('submit', 'save'),)
